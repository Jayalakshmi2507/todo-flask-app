# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore Python virtual environment
venv/
__pycache__/
*.pyc

# Ignore Terraform files (since you faced issues in the past)
*.tfstate
*.tfstate.backup
.terraform/
terraform.tfvars

# Ignore logs and system files
*.log
.DS_Store

# Ignore Docker cache and large files
*.tar.gz
*.img
*.container
.dockerignore

# Ignore Buildkite cache files
.buildkite/cache/

# Ignore Node modules (if you add front-end integrations)
node_modules/

# Ignore environment configuration files
.env
secrets.json
config.yaml

# Ignore GitHub Actions workflow runtime files
.github/workflows/temp/

# Ignore Slack API credentials (if stored locally)
slack_webhook_url.txt
